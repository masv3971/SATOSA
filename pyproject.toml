[tool.poetry]
name = "SATOSA"
version = "8.2.0+sunet1"
description = "Protocol proxy (SAML/OIDC)."
maintainers = ["satosa <satosa-dev@lists.sunet.se>"]
authors = ["DIRG"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/masv3971/SATOS"
repository = "https://github.com/masv3971/SATOS"
documentation = "https://github.com/masv3971/SATOS"

keywords = [
    "satosa",
]

classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]

packages = [
    { include = "satosa", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/masv3971/SATOSA/issues"

#[tool.poetry.scripts]
#make_metadata = "saml2.tools.make_metadata:main"
#mdexport = "saml2.tools.mdexport:main"
#merge_metadata = "saml2.tools.merge_metadata:main"
#parse_xsd2 = "saml2.tools.parse_xsd2:main"

[tool.poetry.dependencies]
python = "^3.9"
"pyop >= v3.4.0",
"pysaml2 >= 6.5.1",
"pycryptodomex",
"requests",
"PyYAML",
"gunicorn",
"Werkzeug",
"click",
"chevron",
"cookies-samesite-compat",

[tool.poetry.extras]
"ldap": ["ldap3"],
"pyop_mongo": ["pyop[mongo]"],
"pyop_redis": ["pyop[redis]"],

extend-exclude = [
    '.github', '.gitlab',
    '.Python', '.*.pyc', '.*.pyo', '.*.pyd', '.*.py.class', '*.egg-info',
    'venv*', '.venv*', '.*_cache',
    'lib', 'lib64', '.*.so',
    'build', 'dist', 'sdist', 'wheels',
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist =
  py36
  py37
  py38
  py39
  pypy3

[testenv]
skip_install = true
deps = -rtests/test_requirements.txt
allowlist_externals =
  tox
  xmlsec1
commands =
  pip install -U pip wheel setuptools
  pip install -U .[pyop_mongo]
  xmlsec1 --version
  python --version
  pytest --version
  tox --version
  pip --version
  pip freeze
  pytest -vvv -ra {posargs:tests/}

[flake8]
ignore =
  E402
  E501
  E111
  E117
  E121
  E123
  E125
  E126
  E201
  E202
  E203
  E221
  E226
  E231
  E261
  E262
  E265
  E275
  E302
  E303
  E703
  W291
  W292
  W293
  W503
  W504
  W605

#skip_install = true
#whitelist_externals =
#  xmlsec1
#  poetry
#commands_pre =
#  poetry install --with test,coverage
#  xmlsec1 --version
#  poetry run python --version
#  poetry run pytest --version
#  poetry run tox --version
#commands =
#  poetry run pytest --import-mode=importlib --cov=saml2 --cov-report=term-missing
"""